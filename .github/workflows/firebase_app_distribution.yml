name: Firebase App Distribution For Debug APK

on:
  push:
    branches:
      - WHD-283_cicd-try_test_cicd_for_firebase_app_distribution
  pull_request:
    branches:
      - WHD-283_cicd-try_test_cicd_for_firebase_app_distribution

jobs:
  build:
    name: 디버그 APK 빌드 및 배포
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Java 설정
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Flutter 설정
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.1'
          channel: 'stable'

      - name: Firebase CLI 설치
        run: npm install -g firebase-tools

      - name: FlutterFire CLI 설치
        run: dart pub global activate flutterfire_cli

      - name: Firebase 설정 파일 생성
        run: |
          firebase login:ci --interactive --token ${{ secrets.FIREBASE_TOKEN }}
          flutterfire configure \
            --project=${{ secrets.FIREBASE_PROJECT_ID }} \
            --platforms=android \
            --android-package-name=${{ secrets.ANDROID_PACKAGE_NAME }}

      - name: 환경 변수 파일 생성
        run: |
          echo "V1_SERVER_BASE_URL=${{ secrets.V1_SERVER_BASE_URL }}" > .env
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env

      - name: google-services.json 생성
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json

      - name: GoogleService-Info.plist 생성
        run: echo '${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}' > ios/Runner/GoogleService-Info.plist

      - name: 의존성 설치
        run: flutter pub get

      - name: 디버그 APK 빌드
        run: flutter build apk --debug

      - name: Firebase App Distribution에 업로드
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIAL_FILE_CONTENT }}
          groups: team8901
          file: build/app/outputs/flutter-apk/app-debug.apk